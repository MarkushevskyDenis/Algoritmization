package by.jonline.grow.algoritmization;

/**
 * Магическим квадратом порядка n называется квадратная матрица размера nxn, составленная из чисел 1, 2, 3,
 * ..., n 2 так, что суммы по каждому столбцу, каждой строке и каждой из двух больших диагоналей равны между
 * собой. Построить такой квадрат. Пример магического квадрата порядка 3:
 * 6 1 8
 * 7 5 3
 * 2 9 4
 *
 * Индийский метод.
 * Алгоритм для всех нечетных n:
 *
 * 1)1 записываем в 0-ую строку и в средний столбец;
 * 2)следующий элемент записываем вверх и вправо:
 *      а)если элемент выходит за верхнюю границу, то опускаем его на нижнюю строку;
 *      б)если элемент выходит за правую границу, то сдвигаем на 0-ой столбец;
 *      в)если элемент выходит за границу по диагонали, то смещаем его на нижнюю строку и 0-ой столбец;
 * 3)если следующий элемент(xi) попадает на занятую позицию, то возвращаемся к предыдущему элементу(xi-1).
 * хi записываем под xi-1;
 * 4)продолжаем до тех пор пока не запишем все числа от 1 до n*n
 */


public class ArrOfArr16 {

    public static void main(String[] args) {

        int n = 3;
        int[][] arr = new int[n][n];
        int x;
        int y;
        int count;
        int copy;
        int copy1;

        x = n / 2;
        y = 0;
        count = 1;

        while (count != n * n + 1) {
            //проверка на наличие элемента
            if (arr[y][x] != 0 && count != 1) {
                x--;
                y += 2;
            }

            arr[y][x] = count;
            x++;
            y--;
            //проверки выхода за границу
            if (x >= n && y > -1) {

                copy = x;
                x = 0;

                if (arr[y][x] != 0 && count != 1) {
                    x = copy;
                    x--;
                    y += 2;
                }


            } else if (y < 0 && x < n) {

                copy = y;
                y = n - 1;

                if (arr[y][x] != 0 && count != 1) {
                    y = copy;

                    x--;
                    y += 2;
                }

            } else if (x >= n && y < 0) {
                copy = x;
                copy1 = y;

                x = 0;
                y = n - 1;

                if (arr[y][x] != 0 && count != 1) {
                    y = copy1;
                    x = copy;
                    x--;
                    y += 2;
                }

            }

            count++;

        }

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                System.out.print(arr[i][j] + " ");
            }
            System.out.println();
        }

    }

}
